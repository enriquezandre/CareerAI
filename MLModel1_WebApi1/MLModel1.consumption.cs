// This file was auto-generated by ML.NET Model Builder. 
using Microsoft.ML;
using Microsoft.ML.Data;
using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
public partial class MLModel1
{
    /// <summary>
    /// model input class for MLModel1.
    /// </summary>
    #region model input class
    public class ModelInput
    {
        [ColumnName(@"Database Fundamentals")]
        public float Database_Fundamentals { get; set; }

        [ColumnName(@"Computer Architecture")]
        public float Computer_Architecture { get; set; }

        [ColumnName(@"Distributed Computing Systems")]
        public float Distributed_Computing_Systems { get; set; }

        [ColumnName(@"Cyber Security")]
        public float Cyber_Security { get; set; }

        [ColumnName(@"Networking")]
        public float Networking { get; set; }

        [ColumnName(@"Software Development")]
        public float Software_Development { get; set; }

        [ColumnName(@"Programming Skills")]
        public float Programming_Skills { get; set; }

        [ColumnName(@"Project Management")]
        public float Project_Management { get; set; }

        [ColumnName(@"Computer Forensics Fundamentals")]
        public float Computer_Forensics_Fundamentals { get; set; }

        [ColumnName(@"Technical Communication")]
        public float Technical_Communication { get; set; }

        [ColumnName(@"AI ML")]
        public float AI_ML { get; set; }

        [ColumnName(@"Software Engineering")]
        public float Software_Engineering { get; set; }

        [ColumnName(@"Business Analysis")]
        public float Business_Analysis { get; set; }

        [ColumnName(@"Communication skills")]
        public float Communication_skills { get; set; }

        [ColumnName(@"Data Science")]
        public float Data_Science { get; set; }

        [ColumnName(@"Troubleshooting skills")]
        public float Troubleshooting_skills { get; set; }

        [ColumnName(@"Graphics Designing")]
        public float Graphics_Designing { get; set; }

        [ColumnName(@"Role")]
        public float Role { get; set; }

    }

    #endregion

    /// <summary>
    /// model output class for MLModel1.
    /// </summary>
    #region model output class
    public class ModelOutput
    {
        [ColumnName(@"Database Fundamentals")]
        public float Database_Fundamentals { get; set; }

        [ColumnName(@"Computer Architecture")]
        public float Computer_Architecture { get; set; }

        [ColumnName(@"Distributed Computing Systems")]
        public float Distributed_Computing_Systems { get; set; }

        [ColumnName(@"Cyber Security")]
        public float Cyber_Security { get; set; }

        [ColumnName(@"Networking")]
        public float Networking { get; set; }

        [ColumnName(@"Software Development")]
        public float Software_Development { get; set; }

        [ColumnName(@"Programming Skills")]
        public float Programming_Skills { get; set; }

        [ColumnName(@"Project Management")]
        public float Project_Management { get; set; }

        [ColumnName(@"Computer Forensics Fundamentals")]
        public float Computer_Forensics_Fundamentals { get; set; }

        [ColumnName(@"Technical Communication")]
        public float Technical_Communication { get; set; }

        [ColumnName(@"AI ML")]
        public float AI_ML { get; set; }

        [ColumnName(@"Software Engineering")]
        public float Software_Engineering { get; set; }

        [ColumnName(@"Business Analysis")]
        public float Business_Analysis { get; set; }

        [ColumnName(@"Communication skills")]
        public float Communication_skills { get; set; }

        [ColumnName(@"Data Science")]
        public float Data_Science { get; set; }

        [ColumnName(@"Troubleshooting skills")]
        public float Troubleshooting_skills { get; set; }

        [ColumnName(@"Graphics Designing")]
        public float Graphics_Designing { get; set; }

        [ColumnName(@"Role")]
        public uint Role { get; set; }

        [ColumnName(@"Features")]
        public float[] Features { get; set; }

        [ColumnName(@"PredictedLabel")]
        public float PredictedLabel { get; set; }

        [ColumnName(@"Score")]
        public float[] Score { get; set; }

    }

    #endregion

    private static string MLNetModelPath = Path.GetFullPath("MLModel1.zip");

    public static readonly Lazy<PredictionEngine<ModelInput, ModelOutput>> PredictEngine = new Lazy<PredictionEngine<ModelInput, ModelOutput>>(() => CreatePredictEngine(), true);

    /// <summary>
    /// Use this method to predict on <see cref="ModelInput"/>.
    /// </summary>
    /// <param name="input">model input.</param>
    /// <returns><seealso cref=" ModelOutput"/></returns>
    public static ModelOutput Predict(ModelInput input)
    {
        var predEngine = PredictEngine.Value;
        return predEngine.Predict(input);
    }

    private static PredictionEngine<ModelInput, ModelOutput> CreatePredictEngine()
    {
        var mlContext = new MLContext();
        ITransformer mlModel = mlContext.Model.Load(MLNetModelPath, out var _);
        return mlContext.Model.CreatePredictionEngine<ModelInput, ModelOutput>(mlModel);
    }
}
